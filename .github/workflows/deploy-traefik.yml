name: Deploy Traefik Stack

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      STACK_NAME: traefik
      TRAEFIK_STACK_FILE: traefik-stack.yml
      NETWORK_NAME: traefik-public
      REMOTE_PATH: /docker/infra-traefik

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: List SSH identities
        run: ssh-add -l || echo "No SSH identities loaded"

      - name: Copy traefik-stack.yml to server
        run: |
          scp -o StrictHostKeyChecking=no ${{ env.TRAEFIK_STACK_FILE }} \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ env.REMOTE_PATH }}/${{ env.TRAEFIK_STACK_FILE }}

      - name: Get current Traefik image tag
        id: previous-image
        run: |
          IMAGE=$(ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "docker service inspect ${STACK_NAME}_traefik --format '{{.Spec.TaskTemplate.ContainerSpec.Image}}'" || echo "")
          echo "previous_image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Create network if not exists
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "docker network ls | grep -w $NETWORK_NAME || docker network create --driver=overlay $NETWORK_NAME"

      - name: Deploy stack
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "docker stack deploy --with-registry-auth -c $REMOTE_PATH/$TRAEFIK_STACK_FILE $STACK_NAME"

      - name: Wait for Traefik to stabilize
        run: sleep 30

      - name: Health check Traefik dashboard
        id: healthcheck
        run: |
          STATUS=$(curl -sk -o /dev/null -w "%{http_code}" https://${{ env.TRAEFIK_DOMAIN }}/dashboard/ || echo "000")
          echo "Status: $STATUS"
          if [ "$STATUS" != "200" ]; then
            echo "Health check failed!"
            exit 1
          fi

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Rolling back to previous image: ${{ steps.previous-image.outputs.previous_image }}"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} bash -s << EOF
            PREV_IMAGE="${{ steps.previous-image.outputs.previous_image }}"
            sed -i "s|image: .*|image: \$PREV_IMAGE|" $REMOTE_PATH/${TRAEFIK_STACK_FILE}
            docker stack deploy --with-registry-auth -c $REMOTE_PATH/${TRAEFIK_STACK_FILE} $STACK_NAME
          EOF

      - name: Send email notification on rollback
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "[Rollback] Deploy do Traefik falhou e foi revertido 🚨"
          to: ${{ secrets.EMAIL_TO_NOTIFY }}
          from: ${{ secrets.SMTP_USERNAME }}
          body: |
            ❌ O deploy do Traefik falhou na branch `main`.
            🔁 O stack foi revertido para a imagem anterior.

            🔖 Commit: ${{ github.sha }}
            👤 Autor: ${{ github.actor }}
            📦 Repositório: ${{ github.repository }}
